{"version":3,"sources":["Components/Navigation.js","Components/Row.js","Components/Table.js","Pages/HomePage.js","Pages/CreatePage.js","Pages/EditPage.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","react_default","a","createElement","class","react_router_dom","to","Row","_ref","exercise","onDeleteExercise","onEditExercise","name","reps","weight","unit","date","substring","id","className","index_esm","onClick","_id","Table","exercises_db","map","i","Components_Row","key","HomePage","changeExercise","_useState","useState","_useState2","Object","slicedToArray","setExercises","history","useHistory","loadExercises","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","_ref3","_callee2","editExercise","_context2","push","_x","_ref4","_callee3","getResponse","_exercises_db","_context3","concat","method","status","console","error","_x2","useEffect","Fragment","Components_Table","CreatePage","setName","_useState3","_useState4","setReps","_useState5","_useState6","setWeight","_useState7","_useState8","setUnit","_useState9","_useState10","setDate","addExercise","CreatePage_regeneratorRuntime","newExercise","body","JSON","stringify","headers","Content-Type","alert","onSubmit","e","preventDefault","htmlFor","type","minLength","required","size","placeholder","value","onChange","target","min","label","option","EditPage","myExercise","EditPage_regeneratorRuntime","err","Error","App","Components_Navigation","react_router","path","exact","Pages_HomePage","Pages_CreatePage","Pages_EditPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.86e39a82.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navigation() {\r\n  return (\r\n  <div class=\"navbar\">\r\n    <nav><Link to=\"/\">My Exercises</Link></nav>\r\n    <nav><Link to=\"../add-exercise\">Add More Exercise</Link></nav>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { RiDeleteBin5Fill, RiEdit2Fill } from 'react-icons/ri';\r\n\r\nfunction Row({ exercise, onDeleteExercise, onEditExercise }) {\r\n    return (\r\n        <tr>\r\n            <td>{exercise.name}</td>\r\n            <td>{exercise.reps}</td>\r\n            <td>{exercise.weight}</td>\r\n            <td>{exercise.unit}</td>\r\n            <td>{exercise.date.substring(0,10)}</td>\r\n            <td id=\"td-icon\">\r\n                <span className=\"change-cursor\">\r\n                    <RiDeleteBin5Fill onClick={() => onDeleteExercise(exercise._id)} />\r\n                </span>        \r\n            </td>\r\n            <td id=\"td-icon\">\r\n                <span className=\"change-cursor\">\r\n                    <RiEdit2Fill onClick={() => onEditExercise(exercise)} />\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Row","import React from \"react\";\r\nimport Row from './Row';\r\n\r\nfunction Table({ exercises_db, onDeleteExercise, onEditExercise }) {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Exercise</th>\r\n                    <th>Reps</th>\r\n                    <th>Weight</th>\r\n                    <th>Unit</th>\r\n                    <th>Date</th>\r\n                    <th>Delete</th>\r\n                    <th>Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {exercises_db.map((exercise, i) => \r\n                    <Row\r\n                        exercise={exercise}\r\n                        key={i}\r\n                        onDeleteExercise={onDeleteExercise}\r\n                        onEditExercise={onEditExercise}\r\n                />)}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Table from '../Components/Table';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction HomePage({ changeExercise }) {\r\n    const [exercises_db, setExercises ] = useState([]);\r\n    const history = useHistory();\r\n\r\n    // RETRIEVE the exercises in the database\r\n    const loadExercises = async () => {\r\n        const response = await fetch('/exercises');\r\n        const exercises_db = await response.json();\r\n        setExercises(exercises_db);\r\n    };\r\n\r\n    // EDIT the exercises\r\n    const onEditExercise = async editExercise => {\r\n        changeExercise(editExercise);\r\n        history.push(\"/edit-exercise\");\r\n    };\r\n\r\n    // DELETE exercise\r\n    const onDeleteExercise = async _id => {\r\n        const response = await fetch(`/exercises/${_id}`, { method : 'DELETE' });\r\n        if (response.status === 204) {\r\n            const getResponse = await fetch('/exercises');\r\n            const exercises_db = await getResponse.json();\r\n            setExercises(exercises_db);\r\n        } else {\r\n            console.error(`Failed to delete exercise with _id=${_id}, status code=${response.status}`);\r\n        };\r\n    };\r\n\r\n    // LOAD the exercises in the database whenever components are mounted (setExercises)\r\n    useEffect(() => {\r\n        loadExercises();\r\n    }, []);\r\n\r\n    // Display the exercises\r\n    return (\r\n        <>\r\n            <article>\r\n                <h2>My Workout</h2>\r\n                    <p>\r\n                        Here are the exercises you have done so far\r\n                    </p>\r\n                    <Table\r\n                        exercises_db={exercises_db}\r\n                        onDeleteExercise={onDeleteExercise}\r\n                        onEditExercise={onEditExercise}\r\n                    />\r\n            </article>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst CreatePage = () => {\r\n\r\n    const [name, setName]       =   useState(\"\");\r\n    const [reps, setReps]       =   useState(0);\r\n    const [weight, setWeight]   =   useState(0);\r\n    const [unit, setUnit]       =   useState(\"lbs\");\r\n    const [date, setDate]       =   useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const addExercise = async () => {\r\n        const newExercise = {name, reps, weight, unit, date}\r\n        const response = await fetch('/exercises', {\r\n            method : 'POST',\r\n            body : JSON.stringify(newExercise),\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n            },\r\n        });\r\n\r\n        if (response.status === 201) {\r\n            alert(\"New Exercise Added! Good Job!\");\r\n        } else {\r\n            alert(`Failed to add new exercise. Status code = ${response.status}`);\r\n        }\r\n\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const options = [\r\n        { label : \"lbs\", value : \"lbs\"},\r\n        { label : \"kgs\", value : \"kgs\"},\r\n        { label : \"mi\", value : \"mi\"},\r\n        { label : \"kms\", value : \"kms\"},\r\n        { label : \"hr\", value : \"hr\"},\r\n        { label : \"min\", value : \"min\"},\r\n        { label : \"sec\", value : \"sec\"},\r\n        { label : \"set\", value : \"set\"}\r\n    ]\r\n\r\n    return (\r\n        <>\r\n        <article>\r\n            <h2>Log your workouts</h2>\r\n                <p>\r\n                    You can add or log any exercise/workouts that you've finished here.\r\n                    Keep up the great work!\r\n                </p> \r\n            \r\n            <form onSubmit={(e) => { e.preventDefault();}}>\r\n                <table id=\"add-or-edit\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Exercise</th>\r\n                        <th>Reps</th>\r\n                        <th>Weight</th>\r\n                        <th>Unit</th>\r\n                        <th>Date</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"name\">\r\n                            <input \r\n                                type=\"text\"\r\n                                minLength=\"1\"\r\n                                required\r\n                                size=\"15\"\r\n                                placeholder=\"Plank\"\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                                id=\"name\" />\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"reps\">\r\n                            <input \r\n                                className=\"digit\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                required\r\n                                placeholder=\"0\"\r\n                                value={reps}\r\n                                onChange={e => setReps(e.target.value)}\r\n                                id=\"reps\" />\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"weight\">\r\n                            <input \r\n                                className=\"digit\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                required\r\n                                placeholder=\"0\"\r\n                                value={weight}\r\n                                onChange={e => setWeight(e.target.value)}\r\n                                id=\"weight\" />\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"unit\">\r\n                            <select \r\n                                name=\"unit\" \r\n                                id=\"unit\" \r\n                                value={unit} \r\n                                required\r\n                                onChange={ e => setUnit(e.target.value)}>\r\n                                {options.map((option, i) => (\r\n                                    <option key={i} value={option.value}>{option.label}</option>\r\n                                ))}\r\n                            </select>\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"date\">\r\n                            <input \r\n                                type=\"date\"\r\n                                required\r\n                                value={date}\r\n                                onChange={e => setDate(e.target.value)}\r\n                                id=\"date\" />\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"submit\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={addExercise}\r\n                                    id=\"submit\">\r\n                                        Add\r\n                                    </button>\r\n                            </label>\r\n                        </td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n                </table>\r\n            </form>\r\n        </article>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreatePage","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst EditPage = ({ myExercise }) => {\r\n\r\n    const [name, setName]       =   useState(myExercise.name);\r\n    const [reps, setReps]       =   useState(myExercise.reps);\r\n    const [weight, setWeight]   =   useState(myExercise.weight);\r\n    const [unit, setUnit]       =   useState(myExercise.unit);\r\n    const [date, setDate]       =   useState(myExercise.date);\r\n\r\n    const history = useHistory();\r\n\r\n    const editExercise = async () => {\r\n        const response = await fetch(`/exercises/${myExercise._id}`, {\r\n            method : 'PUT',\r\n            body : JSON.stringify({\r\n                name : name,\r\n                reps : reps,\r\n                weight : weight,\r\n                unit : unit,\r\n                date : date\r\n            }),\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n            },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            alert(\"Your workout has been updated\");\r\n        } else {\r\n            const err = await response.json();\r\n            alert(`Failed to update exercise. Status code = ${response.status}, error = ${err.Error}`);\r\n        }\r\n\r\n        history.push(\"/\");\r\n    };\r\n    \r\n    const options = [\r\n        { label : \"lbs\", value : \"lbs\"},\r\n        { label : \"kgs\", value : \"kgs\"},\r\n        { label : \"mi\", value : \"mi\"},\r\n        { label : \"kms\", value : \"kms\"},\r\n        { label : \"hr\", value : \"hr\"},\r\n        { label : \"min\", value : \"min\"},\r\n        { label : \"sec\", value : \"sec\"},\r\n        { label : \"set\", value : \"set\"}\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n        <article>\r\n            <h2>Update Your Workouts</h2>\r\n                <p>\r\n                    You can update any of your past workout on this page\r\n                </p> \r\n            <form onSubmit={(e) => { e.preventDefault();}}>\r\n                <table id=\"add-or-edit\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Exercise</th>\r\n                        <th>Reps</th>\r\n                        <th>Weight</th>\r\n                        <th>Unit</th>\r\n                        <th>Date</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"name\">\r\n                            <input \r\n                                type=\"text\"\r\n                                minLength=\"1\"\r\n                                required\r\n                                size=\"15\"\r\n                                placeholder=\"Plank\"\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                                id=\"name\" />\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"reps\">\r\n                            <input \r\n                                className=\"digit\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                required\r\n                                placeholder=\"0\"\r\n                                value={reps}\r\n                                onChange={e => setReps(e.target.value)}\r\n                                id=\"reps\" />\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"weight\">\r\n                            <input \r\n                                className=\"digit\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                required\r\n                                placeholder=\"0\"\r\n                                value={weight}\r\n                                onChange={e => setWeight(e.target.value)}\r\n                                id=\"weight\" />\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"unit\">\r\n                            <select \r\n                                name=\"unit\" \r\n                                id=\"unit\" \r\n                                value={unit} \r\n                                required\r\n                                onChange={ e => setUnit(e.target.value)}>\r\n                                {options.map((option, i) => (\r\n                                    <option key={i} value={option.value}>{option.label}</option>\r\n                                ))}\r\n                            </select>\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"date\">\r\n                            <input \r\n                                type=\"date\"\r\n                                required\r\n                                value={date}\r\n                                onChange={e => setDate(e.target.value)}\r\n                                id=\"date\" />\r\n                            </label>\r\n                        </td>\r\n\r\n                        <td id=\"td-add-edit\">\r\n                            <label htmlFor=\"submit\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={editExercise}\r\n                                    id=\"submit\">\r\n                                        Save\r\n                                    </button>\r\n                            </label>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n                </table>\r\n            </form>\r\n        </article>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditPage","// Import dependencies\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useState } from 'react';\n\n// Import Components and Styles\nimport Navigation from './Components/Navigation';\nimport './App.css';\n\n// Import Pages\nimport Homepage from './Pages/HomePage';\nimport CreatePage from './Pages/CreatePage';\nimport EditPage from './Pages/EditPage';\n\nfunction App() {\n\n  const [myExercise, changeExercise] = useState([]);\n\n  return (\n    <>\n      <Router>\n\n        <header>\n          <h1>Track My Gains - One Day At A Time</h1>\n          <p>\n            Find it difficult to keep track of your workout schedule? \n            <br/>\n            Start now at Track My Gains and embark on a new fitness adventure!\n          </p>\n        </header>\n\n      <Navigation />\n\n      <body>\n        <main>\n\n          <Route path=\"/\" exact>\n            <Homepage changeExercise={changeExercise} />\n          </Route>\n\n          <Route path=\"/add-exercise\">\n            <CreatePage />\n          </Route>\n\n          <Route path=\"/edit-exercise\">\n            <EditPage myExercise={myExercise} />\n          </Route>\n\n        </main>\n      </body>\n\n        <footer>\n            <p>Last Edited 08/11/2022. <cite>&copy; James Dang</cite></p>\n        </footer>\n      \n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}